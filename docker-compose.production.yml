version: '3.8'

services:
  # База данных PostgreSQL для Zabbix (продакшен)
  postgres-server:
    image: postgres:15-alpine
    container_name: zabbix-postgres-prod
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - zabbix-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Zabbix Server (продакшен)
  zabbix-server:
    image: zabbix/zabbix-server-pgsql:alpine-6.4-latest
    container_name: zabbix-server-prod
    restart: always
    environment:
      DB_SERVER_HOST: postgres-server
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ZBX_JAVAGATEWAY: zabbix-java-gateway
      ZBX_JAVAGATEWAY_ENABLE: "true"
      ZBX_JAVAGATEWAYPORT: 10052
      ZBX_DEBUGLEVEL: 2
      ZBX_CACHESIZE: 256M
      ZBX_HISTORYCACHESIZE: 128M
      ZBX_HISTORYINDEXCACHESIZE: 32M
      ZBX_TRENDCACHESIZE: 32M
      ZBX_VALUECACHESIZE: 128M
      ZBX_ENABLE_SNMP_TRAPS: "false"
      ZBX_STARTPOLLERS: 5
      ZBX_STARTPOLLERSUNREACHABLE: 1
      ZBX_STARTTRAPPERS: 5
      ZBX_STARTPINGERS: 1
      ZBX_STARTDISCOVERERS: 1
      ZBX_STARTHTTPPOLLERS: 1
    volumes:
      - zabbix_server_data:/var/lib/zabbix
      - zabbix_server_enc:/var/lib/zabbix/enc
      - zabbix_server_ssh_keys:/var/lib/zabbix/ssh_keys
      - zabbix_server_ssl_certs:/var/lib/zabbix/ssl/certs
      - zabbix_server_ssl_keys:/var/lib/zabbix/ssl/keys
      - zabbix_server_ssl_ca:/var/lib/zabbix/ssl/ssl_ca
      - ./logs/zabbix-server:/var/log/zabbix
    networks:
      - zabbix-net
    ports:
      - "10051:10051"
    depends_on:
      postgres-server:
        condition: service_healthy
      zabbix-java-gateway:
        condition: service_started
    healthcheck:
      test: ["CMD", "zabbix_server", "-R", "config_cache_reload"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Zabbix Web Interface (продакшен)
  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-6.4-latest
    container_name: zabbix-web-prod
    restart: always
    environment:
      ZBX_SERVER_HOST: zabbix-server
      DB_SERVER_HOST: postgres-server
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PHP_TZ: Europe/Moscow
      ZBX_SERVER_NAME: "Zabbix Production"
      NGINX_CLIENT_MAX_BODY_SIZE: 32m
      ZBX_BASEURL: /zabbix
    volumes:
      - zabbix_web_ssl:/etc/ssl/nginx
      - ./ssl:/etc/ssl/nginx/certs:ro
      - ./logs/zabbix-web:/var/log/nginx
    networks:
      - zabbix-net
    # Убираем внешние порты, доступ только через nginx
    expose:
      - "8080"
      - "8443"
    depends_on:
      postgres-server:
        condition: service_healthy
      zabbix-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx прокси для Zabbix (продакшен)
  nginx:
    image: nginx:alpine
    container_name: zabbix-nginx-prod
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - zabbix-net
    depends_on:
      zabbix-web:
        condition: service_healthy
      grafana:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx_status"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Zabbix Java Gateway (продакшен)
  zabbix-java-gateway:
    image: zabbix/zabbix-java-gateway:alpine-6.4-latest
    container_name: zabbix-java-gateway-prod
    restart: always
    environment:
      ZBX_DEBUGLEVEL: warn
      ZBX_TIMEOUT: 5
    networks:
      - zabbix-net
    ports:
      - "10052:10052"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "10052"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Zabbix Agent (продакшен)
  zabbix-agent:
    image: zabbix/zabbix-agent:alpine-6.4-latest
    container_name: zabbix-agent-prod
    restart: always
    environment:
      ZBX_HOSTNAME: "Zabbix Production Server"
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10051
      ZBX_DEBUGLEVEL: 2
      ZBX_PASSIVE_ALLOW: "true"
      ZBX_ACTIVE_ALLOW: "true"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /dev:/host/dev:ro
      - ./logs/zabbix-agent:/var/log/zabbix
    networks:
      - zabbix-net
    ports:
      - "10050:10050"
    depends_on:
      zabbix-server:
        condition: service_healthy
    privileged: true
    pid: "host"
    healthcheck:
      test: ["CMD", "zabbix_agentd", "-t", "agent.ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MongoDB Primary (реплика 1) - продакшен
  mongodb-primary:
    image: mongo:7.0
    container_name: mongodb-primary-prod
    restart: always
    command: mongod --replSet ${MONGODB_REPLICA_SET_NAME} --keyFile /etc/mongodb-keyfile --bind_ip_all
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    volumes:
      - mongodb_primary_data:/data/db
      - ./mongodb-keyfile:/etc/mongodb-keyfile:ro
      - ./logs/mongodb-primary:/var/log/mongodb
      - ./backups/mongodb:/backups
    networks:
      - zabbix-net
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MongoDB Secondary (реплика 2) - продакшен
  mongodb-secondary:
    image: mongo:7.0
    container_name: mongodb-secondary-prod
    restart: always
    command: mongod --replSet ${MONGODB_REPLICA_SET_NAME} --keyFile /etc/mongodb-keyfile --bind_ip_all
    volumes:
      - mongodb_secondary_data:/data/db
      - ./mongodb-keyfile:/etc/mongodb-keyfile:ro
      - ./logs/mongodb-secondary:/var/log/mongodb
    networks:
      - zabbix-net
    ports:
      - "27018:27017"
    depends_on:
      mongodb-primary:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MongoDB Arbiter (арбитр для реплики) - продакшен
  mongodb-arbiter:
    image: mongo:7.0
    container_name: mongodb-arbiter-prod
    restart: always
    command: mongod --replSet ${MONGODB_REPLICA_SET_NAME} --keyFile /etc/mongodb-keyfile --bind_ip_all
    volumes:
      - mongodb_arbiter_data:/data/db
      - ./mongodb-keyfile:/etc/mongodb-keyfile:ro
      - ./logs/mongodb-arbiter:/var/log/mongodb
    networks:
      - zabbix-net
    ports:
      - "27019:27017"
    depends_on:
      mongodb-primary:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MongoDB Replica Set Initializer - продакшен
  mongodb-setup:
    image: mongo:7.0
    container_name: mongodb-setup-prod
    restart: "no"
    networks:
      - zabbix-net
    volumes:
      - ./scripts:/scripts:ro
    depends_on:
      mongodb-primary:
        condition: service_healthy
      mongodb-secondary:
        condition: service_healthy
      mongodb-arbiter:
        condition: service_healthy
    command: >
      bash -c "
        sleep 20 &&
        mongosh --host mongodb-primary:27017 -u ${MONGODB_ROOT_USERNAME} -p ${MONGODB_ROOT_PASSWORD} --authenticationDatabase admin /scripts/init-mongodb-replica.js
      "
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Grafana для визуализации данных из Zabbix (продакшен)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-prod
    restart: always
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_PLUGINS_PREINSTALL: alexanderzobnin-zabbix-app
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: alexanderzobnin-zabbix-datasource
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s/grafana"
      GF_SERVER_DOMAIN: "localhost"
      GF_SERVER_SERVE_FROM_SUB_PATH: "false"
      GF_SERVER_HTTP_PORT: 3000
      GF_SECURITY_DISABLE_GRAVATAR: true
      GF_USERS_ALLOW_SIGN_UP: false
      GF_USERS_ALLOW_ORG_CREATE: false
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./logs/grafana:/var/log/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - zabbix-net
    ports:
      - "3000:3000"
    depends_on:
      zabbix-server:
        condition: service_healthy
      zabbix-web:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
  zabbix_server_data:
  zabbix_server_enc:
  zabbix_server_ssh_keys:
  zabbix_server_ssl_certs:
  zabbix_server_ssl_keys:
  zabbix_server_ssl_ca:
  zabbix_web_ssl:
  grafana_data:
  grafana_logs:
  mongodb_primary_data:
  mongodb_secondary_data:
  mongodb_arbiter_data:

networks:
  zabbix-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16