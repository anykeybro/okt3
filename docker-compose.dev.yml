version: '3.8'

services:
  # База данных PostgreSQL для Zabbix
  postgres-server:
    image: postgres:15-alpine
    container_name: zabbix-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - zabbix-net
    ports:
      - "5432:5432"

  # Zabbix Server
  zabbix-server:
    image: zabbix/zabbix-server-pgsql:alpine-6.4-latest
    container_name: zabbix-server-dev
    restart: unless-stopped
    environment:
      DB_SERVER_HOST: postgres-server
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ZBX_JAVAGATEWAY: zabbix-java-gateway
      ZBX_JAVAGATEWAY_ENABLE: "true"
      ZBX_JAVAGATEWAYPORT: 10052
      ZBX_DEBUGLEVEL: 3
      ZBX_CACHESIZE: 64M
      ZBX_HISTORYCACHESIZE: 32M
      ZBX_HISTORYINDEXCACHESIZE: 8M
      ZBX_TRENDCACHESIZE: 8M
      ZBX_VALUECACHESIZE: 32M
    volumes:
      - zabbix_server_data:/var/lib/zabbix
      - zabbix_server_enc:/var/lib/zabbix/enc
      - zabbix_server_ssh_keys:/var/lib/zabbix/ssh_keys
      - zabbix_server_ssl_certs:/var/lib/zabbix/ssl/certs
      - zabbix_server_ssl_keys:/var/lib/zabbix/ssl/keys
      - zabbix_server_ssl_ca:/var/lib/zabbix/ssl/ssl_ca
    networks:
      - zabbix-net
    ports:
      - "10051:10051"
    depends_on:
      - postgres-server
      - zabbix-java-gateway

  # Zabbix Web Interface
  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-6.4-latest
    container_name: zabbix-web-dev
    restart: unless-stopped
    environment:
      ZBX_SERVER_HOST: zabbix-server
      DB_SERVER_HOST: postgres-server
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PHP_TZ: Europe/Moscow
      ZBX_SERVER_NAME: "Zabbix Development"
      NGINX_CLIENT_MAX_BODY_SIZE: 16m
      ZBX_BASEURL: /zabbix
    volumes:
      - zabbix_web_ssl:/etc/ssl/nginx
    networks:
      - zabbix-net
    # Убираем внешние порты, доступ только через nginx
    expose:
      - "8080"
      - "8443"
    depends_on:
      - postgres-server
      - zabbix-server

  # Nginx прокси для Zabbix
  nginx:
    image: nginx:alpine
    container_name: zabbix-nginx-dev
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    networks:
      - zabbix-net
    depends_on:
      - zabbix-web
      - grafana
      - app-web-billing
      - app-server
      - app-web

  # Zabbix Java Gateway
  zabbix-java-gateway:
    image: zabbix/zabbix-java-gateway:alpine-6.4-latest
    container_name: zabbix-java-gateway-dev
    restart: unless-stopped
    environment:
      ZBX_DEBUGLEVEL: info
      ZBX_TIMEOUT: 3
    networks:
      - zabbix-net
    ports:
      - "10052:10052"

  # Zabbix Agent
  zabbix-agent:
    image: zabbix/zabbix-agent:alpine-6.4-latest
    container_name: zabbix-agent-dev
    restart: unless-stopped
    environment:
      ZBX_HOSTNAME: "Zabbix Development Server"
      ZBX_SERVER_HOST: zabbix-server
      ZBX_SERVER_PORT: 10051
      ZBX_DEBUGLEVEL: 3
      ZBX_PASSIVE_ALLOW: "true"
      ZBX_ACTIVE_ALLOW: "true"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /dev:/host/dev:ro
    networks:
      - zabbix-net
    ports:
      - "10050:10050"
    depends_on:
      - zabbix-server
    privileged: true
    pid: "host"

  # Grafana для визуализации данных из Zabbix
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-dev
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_PLUGINS_PREINSTALL: alexanderzobnin-zabbix-app
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: alexanderzobnin-zabbix-datasource
      GF_SERVER_ROOT_URL: "http://localhost/grafana/"
      GF_APP_URL: "http://localhost/grafana/"
      GF_SERVER_DOMAIN: "localhost"
      GF_SERVER_SERVE_FROM_SUB_PATH: "false"
      GF_SERVER_HTTP_PORT: 3000
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_logs:/var/log/grafana
    networks:
      - zabbix-net
    ports:
      - "3000:3000"
    depends_on:
      - zabbix-server
      - zabbix-web

  # App Web Billing - проксирование к локальному dev серверу
  app-web-billing:
    image: nginx:alpine
    container_name: app-web-billing-proxy-dev
    environment:
      - NEXT_PUBLIC_BASE_PATH=/billing
    restart: unless-stopped
    volumes:
      - ./nginx/billing-proxy.conf:/etc/nginx/nginx.conf:ro
    networks:
      - zabbix-net
    expose:
      - "80"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # MongoDB (standalone для разработки)
  mongodb:
    image: mongo:7.0
    container_name: mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongodb.js:/docker-entrypoint-initdb.d/init-mongodb.js:ro
    networks:
      - zabbix-net
    ports:
      - "27017:27017"

  # App Server Proxy - nginx прокси для локального app-server
  app-server:
    image: nginx:alpine
    container_name: app-server-proxy-dev
    restart: unless-stopped
    volumes:
      - ./nginx/server-proxy.conf:/etc/nginx/nginx.conf:ro
    networks:
      - zabbix-net
    expose:
      - "80"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # App Web - проксирование к локальному dev серверу
  app-web:
    image: nginx:alpine
    container_name: app-web-proxy-dev
    restart: unless-stopped
    volumes:
      - ./nginx/web-proxy.conf:/etc/nginx/nginx.conf:ro
    networks:
      - zabbix-net
    expose:
      - "80"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Zookeeper для Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper-dev
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - zabbix-net
    ports:
      - "2181:2181"

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-dev
    restart: unless-stopped
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - zabbix-net
    ports:
      - "29092:29092"
      - "9092:9092"

volumes:
  postgres_data:
  zabbix_server_data:
  zabbix_server_enc:
  zabbix_server_ssh_keys:
  zabbix_server_ssl_certs:
  zabbix_server_ssl_keys:
  zabbix_server_ssl_ca:
  zabbix_web_ssl:
  nginx_logs:
  grafana_data:
  grafana_logs:
  mongodb_data:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:

networks:
  zabbix-net:
    driver: bridge