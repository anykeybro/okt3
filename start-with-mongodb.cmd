@echo off
echo üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ —Å MongoDB —Ä–µ–ø–ª–∏–∫–æ–π...

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–æ–≤
if not exist .env.development (
    echo ‚ö†Ô∏è  –§–∞–π–ª .env.development –Ω–µ –Ω–∞–π–¥–µ–Ω. –ö–æ–ø–∏—Ä—É–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞...
    copy .env.development.example .env.development
    echo ‚úÖ –§–∞–π–ª .env.development —Å–æ–∑–¥–∞–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!
)

if not exist packages\app-server\.env (
    echo ‚ö†Ô∏è  –§–∞–π–ª .env –¥–ª—è app-server –Ω–µ –Ω–∞–π–¥–µ–Ω. –ö–æ–ø–∏—Ä—É–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞...
    copy packages\app-server\.env.example packages\app-server\.env
    echo ‚úÖ –§–∞–π–ª .env –¥–ª—è app-server —Å–æ–∑–¥–∞–Ω!
)

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞ MongoDB
if not exist mongodb-keyfile (
    echo üîë –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á –¥–ª—è MongoDB —Ä–µ–ø–ª–∏–∫–∏...
    openssl rand -base64 756 > mongodb-keyfile
    echo ‚úÖ –ö–ª—é—á MongoDB —Å–æ–∑–¥–∞–Ω
)

echo üê≥ –ó–∞–ø—É—Å–∫–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...
docker-compose -f docker-compose.dev.yml --env-file .env.development up -d

echo ‚è≥ –û–∂–∏–¥–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é MongoDB —Ä–µ–ø–ª–∏–∫–∏ (30 —Å–µ–∫—É–Ω–¥)...
timeout /t 30 /nobreak > nul

echo üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å MongoDB —Ä–µ–ø–ª–∏–∫–∏...
docker exec mongodb-primary-dev mongosh --eval "rs.status()" --quiet

echo üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π app-server...
start "App Server" cmd /k "cd /d %~dp0packages\app-server && yarn dev"

echo üéâ –ü—Ä–æ–µ–∫—Ç –∑–∞–ø—É—â–µ–Ω!
echo.
echo üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:
echo   - App Web: http://localhost/
echo   - App Server API: http://localhost/api/health
echo   - App Web Billing: http://localhost/billing
echo   - Zabbix: http://localhost/zabbix/
echo   - Grafana: http://localhost/grafana/
echo   - MongoDB Primary: localhost:27017
echo   - MongoDB Secondary: localhost:27018
echo   - MongoDB Arbiter: localhost:27019
echo.
echo üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: docker-compose -f docker-compose.dev.yml down
pause